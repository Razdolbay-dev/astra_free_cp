# Generated by Django 2.2.14 on 2020-11-10 11:21

import autoslug.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Softcam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('name_id', models.CharField(max_length=50, verbose_name='ID')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name_id')),
                ('host', models.CharField(max_length=50, verbose_name='Host')),
                ('port', models.IntegerField(verbose_name='Port')),
                ('user', models.CharField(max_length=50, verbose_name='User')),
                ('user_pass', models.CharField(max_length=50, verbose_name='Pass')),
                ('key', models.CharField(max_length=28, verbose_name='Key')),
            ],
            options={
                'verbose_name': 'Softcam',
                'verbose_name_plural': 'Softcam',
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('stream_id', models.CharField(max_length=200, verbose_name='ID')),
                ('url', autoslug.fields.AutoSlugField(editable=False, max_length=150, populate_from='stream_id')),
                ('set_map', models.CharField(blank=True, max_length=200, null=True, verbose_name='Map PIDs')),
                ('set_pnr', models.IntegerField(blank=True, null=True, verbose_name='Set PNR')),
                ('set_tsid', models.IntegerField(blank=True, null=True, verbose_name='Set TSID')),
                ('service_type', models.CharField(blank=True, choices=[('1', 'Video'), ('2', 'Radio'), ('3', 'Teletext')], max_length=1)),
                ('service_provider', models.CharField(blank=True, max_length=200, verbose_name='Provider Name')),
                ('service_name', models.CharField(blank=True, max_length=200, verbose_name='Service Name')),
                ('input_u', models.CharField(max_length=200, verbose_name='Input')),
                ('output_u', models.CharField(max_length=200, verbose_name='Output')),
                ('scrambled', models.PositiveIntegerField(blank=True, default=0, verbose_name='Scram')),
                ('bitrate', models.PositiveIntegerField(blank=True, default=0, verbose_name='Bitrate')),
                ('cc_error', models.PositiveIntegerField(blank=True, default=0, verbose_name='CC-Errors')),
                ('pes_error', models.PositiveIntegerField(blank=True, default=0, verbose_name='Pes-Errors')),
                ('ready', models.PositiveIntegerField(blank=True, default=0, verbose_name='Onair')),
            ],
            options={
                'verbose_name': 'Stream',
                'verbose_name_plural': 'Streams',
            },
        ),
        migrations.CreateModel(
            name='Tuner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Name')),
                ('dvb_id', models.CharField(max_length=25, verbose_name='ID')),
                ('url', autoslug.fields.AutoSlugField(editable=False, populate_from='dvb_id')),
                ('adapter_id', models.CharField(max_length=200, verbose_name='Adapter')),
                ('signal_type', models.CharField(choices=[('S', 'S'), ('S2', 'S2'), ('T', 'T'), ('T2', 'T2')], max_length=2)),
                ('frequency', models.SmallIntegerField(default=0, verbose_name='Frequency')),
                ('polarization', models.CharField(choices=[('H', 'Horizontal'), ('V', 'Vertical'), ('R', 'Right'), ('L', 'Left')], max_length=2)),
                ('symbolrate', models.SmallIntegerField(default=0, verbose_name='Symbolrate')),
                ('lof1', models.SmallIntegerField(blank=True, default=0, verbose_name='lof1 (MHz)')),
                ('lof2', models.SmallIntegerField(blank=True, default=0, verbose_name='lof2 (MHz)')),
                ('slof', models.SmallIntegerField(blank=True, default=0, verbose_name='slof (MHz)')),
                ('snr', models.PositiveIntegerField(blank=True, default=0, verbose_name='SNR')),
                ('bitrate', models.PositiveIntegerField(blank=True, default=0, verbose_name='Signal')),
                ('unc', models.CharField(default=0, max_length=10, verbose_name='UNC')),
                ('ber', models.PositiveIntegerField(blank=True, default=0, verbose_name='BER')),
            ],
            options={
                'verbose_name': 'Tuner',
                'verbose_name_plural': 'Tuners',
            },
        ),
    ]
